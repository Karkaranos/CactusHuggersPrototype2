//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/ActionMaps/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Keyboard"",
            ""id"": ""6fd42cb3-5961-47fc-8f1a-f324c5f68a60"",
            ""actions"": [
                {
                    ""name"": ""SideMovement"",
                    ""type"": ""Value"",
                    ""id"": ""8f2eea57-093f-4bf2-80d4-b64060ad4929"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ForwardBackMovement"",
                    ""type"": ""Value"",
                    ""id"": ""cb1aa949-fbf9-4d71-b255-744947c3811c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Mouse"",
                    ""type"": ""Value"",
                    ""id"": ""7f2b76c7-e784-4671-9193-ca7bb21de8c3"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Save State"",
                    ""type"": ""Button"",
                    ""id"": ""718e3689-3285-45c2-98ec-b27adb11d0a3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectState1"",
                    ""type"": ""Button"",
                    ""id"": ""12f2e35d-4df6-4066-9ada-9ae4765477eb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectState2"",
                    ""type"": ""Button"",
                    ""id"": ""7148d5de-826e-451d-b15f-ad9409daa37a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectState3"",
                    ""type"": ""Button"",
                    ""id"": ""f4ce3e12-24e7-4517-9ae9-f62208ce9064"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LoadState"",
                    ""type"": ""Button"",
                    ""id"": ""5922209f-bd26-4ae5-a30c-41117c437d59"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""0ed0dbd3-8a81-492f-8e17-a8886770041a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""AD"",
                    ""id"": ""62b7c8d2-a03f-4b33-b86a-581fc9fc40ab"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SideMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""1d12c81d-6f3a-4879-8152-e36778526181"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SideMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""4d7c9cfc-c910-4ef9-93b8-8e0028292a78"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SideMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""0f2ccc27-74f7-48e9-b931-f2e876847f44"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SideMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""0c913ebb-ebb6-4d33-8508-167628090f13"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SideMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""69bd1342-83ca-4f59-8af2-493b2ff4553e"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SideMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""WS"",
                    ""id"": ""ca81c36d-c1ad-4fcb-9183-3b501c7d1d90"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ForwardBackMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""85438a3a-9b02-4360-8b6c-69d42dd0a0c5"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ForwardBackMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""7f439c12-bd07-4294-8418-3b9d3b977643"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ForwardBackMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""4e92084a-12e3-47b4-a3be-2d67c69c9501"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ForwardBackMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""9bc121bf-6855-4dd1-b7f8-3485ec8217b7"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ForwardBackMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""e79212ba-0fa7-4f99-9d6a-f5e2b0e8ed6d"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ForwardBackMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""220452cb-a29a-430d-8b2d-eba81539291e"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""28957ed7-9c63-4cb6-be8d-d704376947b6"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Save State"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fa085315-324d-45a3-a667-1c9b546f25cb"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Save State"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c73647e9-0a84-4fa1-adde-1aa457789522"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectState1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""36ecfa23-f830-41a7-bee4-85496087d299"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectState2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""65b0ef2e-075f-4246-b6ef-b88ee65e55bc"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectState3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4a713313-cceb-4c16-8b57-0b9ab04081e6"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LoadState"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""afd7ab9c-206a-4ea5-aad7-298515d30f9e"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Keyboard
        m_Keyboard = asset.FindActionMap("Keyboard", throwIfNotFound: true);
        m_Keyboard_SideMovement = m_Keyboard.FindAction("SideMovement", throwIfNotFound: true);
        m_Keyboard_ForwardBackMovement = m_Keyboard.FindAction("ForwardBackMovement", throwIfNotFound: true);
        m_Keyboard_Mouse = m_Keyboard.FindAction("Mouse", throwIfNotFound: true);
        m_Keyboard_SaveState = m_Keyboard.FindAction("Save State", throwIfNotFound: true);
        m_Keyboard_SelectState1 = m_Keyboard.FindAction("SelectState1", throwIfNotFound: true);
        m_Keyboard_SelectState2 = m_Keyboard.FindAction("SelectState2", throwIfNotFound: true);
        m_Keyboard_SelectState3 = m_Keyboard.FindAction("SelectState3", throwIfNotFound: true);
        m_Keyboard_LoadState = m_Keyboard.FindAction("LoadState", throwIfNotFound: true);
        m_Keyboard_Interact = m_Keyboard.FindAction("Interact", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Keyboard
    private readonly InputActionMap m_Keyboard;
    private List<IKeyboardActions> m_KeyboardActionsCallbackInterfaces = new List<IKeyboardActions>();
    private readonly InputAction m_Keyboard_SideMovement;
    private readonly InputAction m_Keyboard_ForwardBackMovement;
    private readonly InputAction m_Keyboard_Mouse;
    private readonly InputAction m_Keyboard_SaveState;
    private readonly InputAction m_Keyboard_SelectState1;
    private readonly InputAction m_Keyboard_SelectState2;
    private readonly InputAction m_Keyboard_SelectState3;
    private readonly InputAction m_Keyboard_LoadState;
    private readonly InputAction m_Keyboard_Interact;
    public struct KeyboardActions
    {
        private @PlayerControls m_Wrapper;
        public KeyboardActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @SideMovement => m_Wrapper.m_Keyboard_SideMovement;
        public InputAction @ForwardBackMovement => m_Wrapper.m_Keyboard_ForwardBackMovement;
        public InputAction @Mouse => m_Wrapper.m_Keyboard_Mouse;
        public InputAction @SaveState => m_Wrapper.m_Keyboard_SaveState;
        public InputAction @SelectState1 => m_Wrapper.m_Keyboard_SelectState1;
        public InputAction @SelectState2 => m_Wrapper.m_Keyboard_SelectState2;
        public InputAction @SelectState3 => m_Wrapper.m_Keyboard_SelectState3;
        public InputAction @LoadState => m_Wrapper.m_Keyboard_LoadState;
        public InputAction @Interact => m_Wrapper.m_Keyboard_Interact;
        public InputActionMap Get() { return m_Wrapper.m_Keyboard; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(KeyboardActions set) { return set.Get(); }
        public void AddCallbacks(IKeyboardActions instance)
        {
            if (instance == null || m_Wrapper.m_KeyboardActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_KeyboardActionsCallbackInterfaces.Add(instance);
            @SideMovement.started += instance.OnSideMovement;
            @SideMovement.performed += instance.OnSideMovement;
            @SideMovement.canceled += instance.OnSideMovement;
            @ForwardBackMovement.started += instance.OnForwardBackMovement;
            @ForwardBackMovement.performed += instance.OnForwardBackMovement;
            @ForwardBackMovement.canceled += instance.OnForwardBackMovement;
            @Mouse.started += instance.OnMouse;
            @Mouse.performed += instance.OnMouse;
            @Mouse.canceled += instance.OnMouse;
            @SaveState.started += instance.OnSaveState;
            @SaveState.performed += instance.OnSaveState;
            @SaveState.canceled += instance.OnSaveState;
            @SelectState1.started += instance.OnSelectState1;
            @SelectState1.performed += instance.OnSelectState1;
            @SelectState1.canceled += instance.OnSelectState1;
            @SelectState2.started += instance.OnSelectState2;
            @SelectState2.performed += instance.OnSelectState2;
            @SelectState2.canceled += instance.OnSelectState2;
            @SelectState3.started += instance.OnSelectState3;
            @SelectState3.performed += instance.OnSelectState3;
            @SelectState3.canceled += instance.OnSelectState3;
            @LoadState.started += instance.OnLoadState;
            @LoadState.performed += instance.OnLoadState;
            @LoadState.canceled += instance.OnLoadState;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
        }

        private void UnregisterCallbacks(IKeyboardActions instance)
        {
            @SideMovement.started -= instance.OnSideMovement;
            @SideMovement.performed -= instance.OnSideMovement;
            @SideMovement.canceled -= instance.OnSideMovement;
            @ForwardBackMovement.started -= instance.OnForwardBackMovement;
            @ForwardBackMovement.performed -= instance.OnForwardBackMovement;
            @ForwardBackMovement.canceled -= instance.OnForwardBackMovement;
            @Mouse.started -= instance.OnMouse;
            @Mouse.performed -= instance.OnMouse;
            @Mouse.canceled -= instance.OnMouse;
            @SaveState.started -= instance.OnSaveState;
            @SaveState.performed -= instance.OnSaveState;
            @SaveState.canceled -= instance.OnSaveState;
            @SelectState1.started -= instance.OnSelectState1;
            @SelectState1.performed -= instance.OnSelectState1;
            @SelectState1.canceled -= instance.OnSelectState1;
            @SelectState2.started -= instance.OnSelectState2;
            @SelectState2.performed -= instance.OnSelectState2;
            @SelectState2.canceled -= instance.OnSelectState2;
            @SelectState3.started -= instance.OnSelectState3;
            @SelectState3.performed -= instance.OnSelectState3;
            @SelectState3.canceled -= instance.OnSelectState3;
            @LoadState.started -= instance.OnLoadState;
            @LoadState.performed -= instance.OnLoadState;
            @LoadState.canceled -= instance.OnLoadState;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
        }

        public void RemoveCallbacks(IKeyboardActions instance)
        {
            if (m_Wrapper.m_KeyboardActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IKeyboardActions instance)
        {
            foreach (var item in m_Wrapper.m_KeyboardActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_KeyboardActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public KeyboardActions @Keyboard => new KeyboardActions(this);
    public interface IKeyboardActions
    {
        void OnSideMovement(InputAction.CallbackContext context);
        void OnForwardBackMovement(InputAction.CallbackContext context);
        void OnMouse(InputAction.CallbackContext context);
        void OnSaveState(InputAction.CallbackContext context);
        void OnSelectState1(InputAction.CallbackContext context);
        void OnSelectState2(InputAction.CallbackContext context);
        void OnSelectState3(InputAction.CallbackContext context);
        void OnLoadState(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
    }
}
